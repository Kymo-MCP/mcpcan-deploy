{{- if .Values.services.gateway.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.gateway.name | default "mcp-gateway" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.services.gateway.name | default "mcp-gateway" }}
    {{- include "mcp-box.labels" . | nindent 4 }}
  annotations:
    deployment.kubernetes.io/revision: "{{ .Release.Revision }}"
spec:
  replicas: {{ .Values.services.gateway.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.services.gateway.name | default "mcp-gateway" }}
  template:
    metadata:
      labels:
        app: {{ .Values.services.gateway.name | default "mcp-gateway" }}
        {{- include "mcp-box.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ .Values.services.gateway.name | default "mcp-gateway" }}
        image: {{ .Values.global.registry }}/{{ .Values.services.gateway.name | default "mcp-gateway" }}:{{ .Values.global.version }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        {{- if .Values.services.gateway.service.port }}
        ports:
        - containerPort: {{ .Values.services.gateway.service.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.services.gateway.resources }}
        resources:
          {{- toYaml .Values.services.gateway.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: "/app/config"
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: mcp-config
          items:
          - key: "gateway.yaml"
            path: "gateway.yaml"
---
{{- if .Values.services.gateway.service.port }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.services.gateway.service.name | default "mcp-gateway-svc" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.services.gateway.name | default "mcp-gateway" }}
    {{- include "mcp-box.labels" . | nindent 4 }}
spec:
  type: {{ .Values.services.gateway.service.type | default "ClusterIP" }}
  ports:
  - port: {{ .Values.services.gateway.service.port }}
    targetPort: {{ .Values.services.gateway.service.port }}
    protocol: TCP
    name: http
  selector:
    app: {{ .Values.services.gateway.name | default "mcp-gateway" }}
{{- end }}
---
{{- if and .Values.ingress.enabled .Values.services.gateway.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.services.gateway.name | default "mcp-gateway" }}-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.services.gateway.name | default "mcp-gateway" }}
    {{- include "mcp-box.labels" . | nindent 4 }}
  {{- $ann := (merge (.Values.services.gateway.ingress.annotations | default dict) (.Values.ingress.annotations | default dict)) }}
  {{- if gt (len $ann) 0 }}
  annotations:
    {{- toYaml $ann | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    {{- if .Values.global.domain }}
    - {{ .Values.global.domain }}
    {{- end }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  {{- if .Values.global.domain }}
  - host: {{ .Values.global.domain }}
  {{- else }}
  - 
  {{- end }}
    http:
      paths:
      - path: {{ .Values.services.gateway.ingress.path | default "/" }}
        pathType: {{ .Values.services.gateway.ingress.pathType | default "Prefix" }}
        backend:
          service:
            name: {{ .Values.services.gateway.service.name | default "mcp-gateway-svc" }}
            port:
              number: {{ .Values.services.gateway.service.port }}
{{- end }}
{{- end }}